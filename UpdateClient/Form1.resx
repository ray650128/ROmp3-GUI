<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAIAE
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAkJCQASEhIAHx8fACwsLAA5OTkARUVFAFJSUgBfX18AbGxsAHh4
        eACFhYUAkpKSAJ+fnwCrq6sAuLi4AMXFxQDS0tIA3t7eAOvr6wD4+PgA8Pv/AKSgoADA3MAA8MqmAAAA
        PgAAAF0AAAB8AAAAmwAAALoAAADZAAAA8AAkJP8ASEj/AGxs/wCQkP8AtLT/AAAUPgAAHl0AACh8AAAy
        mwAAPLoAAEbZAABV8AAkbf8ASIX/AGyd/wCQtf8AtM3/AAAqPgAAP10AAFR8AABpmwAAfroAAJPZAACq
        8AAktv8ASML/AGzO/wCQ2v8AtOb/AAA+PgAAXV0AAHx8AACbmwAAuroAANnZAADw8AAk//8ASP//AGz/
        /wCQ//8AtP//AAA+KgAAXT8AAHxUAACbaQAAun4AANmTAADwqgAk/7YASP/CAGz/zgCQ/9oAtP/mAAA+
        FAAAXR4AAHwoAACbMgAAujwAANlGAADwVQAk/20ASP+FAGz/nQCQ/7UAtP/NAAA+AAAAXQAAAHwAAACb
        AAAAugAAANkAAADwAAAk/yQASP9IAGz/bACQ/5AAtP+0ABQ+AAAeXQAAKHwAADKbAAA8ugAARtkAAFXw
        AABt/yQAhf9IAJ3/bAC1/5AAzf+0ACo+AAA/XQAAVHwAAGmbAAB+ugAAk9kAAKrwAAC2/yQAwv9IAM7/
        bADa/5AA5v+0AD4+AABdXQAAfHwAAJubAAC6ugAA2dkAAPDwAAD//yQA//9IAP//bAD//5AA//+0AD4q
        AABdPwAAfFQAAJtpAAC6fgAA2ZMAAPCqAAD/tiQA/8JIAP/ObAD/2pAA/+a0AD4UAABdHgAAfCgAAJsy
        AAC6PAAA2UYAAPBVAAD/bSQA/4VIAP+dbAD/tZAA/820AD4AAABdAAAAfAAAAJsAAAC6AAAA2QAAAPAA
        AAD/JCQA/0hIAP9sbAD/kJAA/7S0AD4AFABdAB4AfAAoAJsAMgC6ADwA2QBGAPAAVQD/JG0A/0iFAP9s
        nQD/kLUA/7TNAD4AKgBdAD8AfABUAJsAaQC6AH4A2QCTAPAAqgD/JLYA/0jCAP9szgD/kNoA/7TmAD4A
        PgBdAF0AfAB8AJsAmwC6ALoA2QDZAPAA8AD/JP8A/0j/AP9s/wD/kP8A/7T/ACoAPgA/AF0AVAB8AGkA
        mwB+ALoAkwDZAKoA8AC2JP8Awkj/AM5s/wDakP8A5rT/ABQAPgAeAF0AKAB8ADIAmwA8ALoARgDZAFUA
        8ABtJP8AhUj/AJ1s/wC1kP8AzbT/AAAAABYYPhjp6RYxMfYYPxoYGSQkIgcWFjH3GR8bAAAAAAAAIDEx
        GBUXMRf39hhLGhsaGx0IGxcXGTExGRsAAAAAAAAYMTEyMRc96fcXPhgWFhcaGBgaPjAYFhcZIgAAAAAA
        ABcwPjMxFxkX9z0+9vb2FQgIFho99xYUGCEAAAAAAAAAGPgzMzEXFxcYGBgZGPYVFxsXCDwVFRYhAAAA
        AAAAAAAh6jExPhcZGhgIMjIaGRcWGhUWFhUVFRsAAAAAAAAAAADpPj4+Fhg+GxpLMzIyGBUWMTH2FhcT
        GAAAAAAAAAAAABUYCBoXMldjSz8+FxwyFBY+MvYVFRUbAAAAAAAAAAAAFhgXFxczPz8/MzIRFz4U9jIx
        9hUIGRsAAAAAAAAAAAAWCBYXMRYzMz4+CBBBGhQUMTEUGhsbGwAAAAAAAAAAABUIE0ExEjEzPz4IQDU1
        ExT2+PYbJRgVGQAAAAAAAAAAFQgTNQgRCBYzMjU1NfYx+Bn29xcVFBUXAAAAAAAAAAAVCBMWNTUaGBYy
        FhoT9jMyFzEx9hUWFRcAAAAAAAAAFxUIFBYXGhUZFxUZCBP2MjH3MRYwFxsXFwAAAAAAAAAVFhsVCBcI
        FBsWFBkUFvYwFzE+9jD2FhUXAAAAAAAAABUWGxUbCBUUHBYVGRUYCBUU9jD2MjD3GAgAAAAAAAAAFRkb
        FggbGBUbGRYYGBoYFhcWFvYwFzExCAAAAAAAAAAXGxsWCBsaGQgIGBgZFxgYGBf49vb29hYIAAAAAAAA
        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
</value>
  </data>
</root>